{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import {PluginListenerHandle} from '@capacitor/core';\n\nexport interface PipState {\n  isInPictureInPictureMode: boolean;\n}\n\nexport declare type PipModeChangeListener = (state: PipState) => void;\n\nexport interface PipPlugin {\n  enable(): Promise<{ value: string }>;\n\n  disable(): Promise<{ value: string }>;\n\n  addListener(eventName: 'pipModeChange', listenerFunc: PipModeChangeListener): Promise<PluginListenerHandle> & PluginListenerHandle;\n}\n"]}